//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""DrivingSims"",
            ""id"": ""d5f1ea3b-d646-4d5a-9d70-14370ef120fa"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Value"",
                    ""id"": ""78c74141-4f29-45ed-894d-3327c7a458fe"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Value"",
                    ""id"": ""1546681e-c4c4-4f46-99a1-1bfc41a8a26c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""d68f2171-34f5-4ec4-b44f-abb513d32803"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BackGear"",
                    ""type"": ""Button"",
                    ""id"": ""6db01576-d5f7-4446-bce6-a59e4f664762"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NextGear"",
                    ""type"": ""Button"",
                    ""id"": ""50e7865f-a1de-45ad-b442-2ce792043a12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EngineOn"",
                    ""type"": ""Button"",
                    ""id"": ""ec03327d-14f5-4e07-8e29-bfc04c05613f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""81abfc66-3e2e-47c3-bb4e-ebe36504ddef"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd8fcc5b-efae-470a-a99e-eb05cc4cd9f3"",
                    ""path"": ""\t<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54a8a4ba-82cb-4a7e-b2bf-4ea46f5044c7"",
                    ""path"": ""<Joystick>/rz"",
                    ""interactions"": """",
                    ""processors"": ""Invert,Normalize(max=1)"",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30c7ef09-1556-43c9-8fae-dde2dfa713b0"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4393d183-e11e-4d04-b521-3e3df39fe6f9"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c36642e2-4506-4b3e-a774-106be9933547"",
                    ""path"": ""<Joystick>/stick/y"",
                    ""interactions"": """",
                    ""processors"": ""Normalize(max=1,zero=-1)"",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector LeftRight"",
                    ""id"": ""8698466f-69c2-47a7-9525-ef585bc031d7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""09c0d9bc-dc00-4170-90e9-885ba0fe447a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""42723608-3223-4e07-a84b-5440521b67e3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""174e8c91-8fee-4726-81ce-9e3a3f881dc5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""604fe0e2-6be9-426c-b0c4-7d93960b9d94"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector AD"",
                    ""id"": ""e3f0bffc-7b09-497a-a7da-275221168bc2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""882fadca-a503-43c4-96b2-ae1074e55c9b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""6ba7bec7-52b5-416b-b552-bb3dddea49f2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""c36c5223-a1c4-4ea3-8379-38cdc10677f0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""60ed9c80-97e4-4e9a-8c6c-a4b3ff1cb077"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Test"",
                    ""id"": ""faafec86-1f46-4bb7-91b5-626033646f2f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""58b1031a-d33b-43b1-8526-d831fcf05f8b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""622fd30c-9f67-438d-a3a0-478e741cf028"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""8703045b-f767-4876-9098-e35d5bc79dac"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""1741541f-5749-4ced-9f43-e08289d3aec9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""25c80334-fbf2-4be4-b452-b19ebad6d0d5"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16c1026b-8529-48f7-a9cc-037a766edccc"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b70b3582-66b7-4af4-a272-50c2904b6a36"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecfae50d-cd8a-45f6-9383-fcf3f5bcf52b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec134ac9-2c33-4e08-a609-9f9b58e59f2e"",
                    ""path"": ""<HID::44F B684>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5646ff7-d145-48d3-b358-e2678ec94ec9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EngineOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""073c3eee-bbdf-4ea5-a21d-90884b2d02d3"",
                    ""path"": ""<HID::44F B684>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EngineOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DrivingSims
        m_DrivingSims = asset.FindActionMap("DrivingSims", throwIfNotFound: true);
        m_DrivingSims_Accelerate = m_DrivingSims.FindAction("Accelerate", throwIfNotFound: true);
        m_DrivingSims_Brake = m_DrivingSims.FindAction("Brake", throwIfNotFound: true);
        m_DrivingSims_Turn = m_DrivingSims.FindAction("Turn", throwIfNotFound: true);
        m_DrivingSims_BackGear = m_DrivingSims.FindAction("BackGear", throwIfNotFound: true);
        m_DrivingSims_NextGear = m_DrivingSims.FindAction("NextGear", throwIfNotFound: true);
        m_DrivingSims_EngineOn = m_DrivingSims.FindAction("EngineOn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DrivingSims
    private readonly InputActionMap m_DrivingSims;
    private List<IDrivingSimsActions> m_DrivingSimsActionsCallbackInterfaces = new List<IDrivingSimsActions>();
    private readonly InputAction m_DrivingSims_Accelerate;
    private readonly InputAction m_DrivingSims_Brake;
    private readonly InputAction m_DrivingSims_Turn;
    private readonly InputAction m_DrivingSims_BackGear;
    private readonly InputAction m_DrivingSims_NextGear;
    private readonly InputAction m_DrivingSims_EngineOn;
    public struct DrivingSimsActions
    {
        private @PlayerControls m_Wrapper;
        public DrivingSimsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_DrivingSims_Accelerate;
        public InputAction @Brake => m_Wrapper.m_DrivingSims_Brake;
        public InputAction @Turn => m_Wrapper.m_DrivingSims_Turn;
        public InputAction @BackGear => m_Wrapper.m_DrivingSims_BackGear;
        public InputAction @NextGear => m_Wrapper.m_DrivingSims_NextGear;
        public InputAction @EngineOn => m_Wrapper.m_DrivingSims_EngineOn;
        public InputActionMap Get() { return m_Wrapper.m_DrivingSims; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DrivingSimsActions set) { return set.Get(); }
        public void AddCallbacks(IDrivingSimsActions instance)
        {
            if (instance == null || m_Wrapper.m_DrivingSimsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DrivingSimsActionsCallbackInterfaces.Add(instance);
            @Accelerate.started += instance.OnAccelerate;
            @Accelerate.performed += instance.OnAccelerate;
            @Accelerate.canceled += instance.OnAccelerate;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @Turn.started += instance.OnTurn;
            @Turn.performed += instance.OnTurn;
            @Turn.canceled += instance.OnTurn;
            @BackGear.started += instance.OnBackGear;
            @BackGear.performed += instance.OnBackGear;
            @BackGear.canceled += instance.OnBackGear;
            @NextGear.started += instance.OnNextGear;
            @NextGear.performed += instance.OnNextGear;
            @NextGear.canceled += instance.OnNextGear;
            @EngineOn.started += instance.OnEngineOn;
            @EngineOn.performed += instance.OnEngineOn;
            @EngineOn.canceled += instance.OnEngineOn;
        }

        private void UnregisterCallbacks(IDrivingSimsActions instance)
        {
            @Accelerate.started -= instance.OnAccelerate;
            @Accelerate.performed -= instance.OnAccelerate;
            @Accelerate.canceled -= instance.OnAccelerate;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @Turn.started -= instance.OnTurn;
            @Turn.performed -= instance.OnTurn;
            @Turn.canceled -= instance.OnTurn;
            @BackGear.started -= instance.OnBackGear;
            @BackGear.performed -= instance.OnBackGear;
            @BackGear.canceled -= instance.OnBackGear;
            @NextGear.started -= instance.OnNextGear;
            @NextGear.performed -= instance.OnNextGear;
            @NextGear.canceled -= instance.OnNextGear;
            @EngineOn.started -= instance.OnEngineOn;
            @EngineOn.performed -= instance.OnEngineOn;
            @EngineOn.canceled -= instance.OnEngineOn;
        }

        public void RemoveCallbacks(IDrivingSimsActions instance)
        {
            if (m_Wrapper.m_DrivingSimsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDrivingSimsActions instance)
        {
            foreach (var item in m_Wrapper.m_DrivingSimsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DrivingSimsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DrivingSimsActions @DrivingSims => new DrivingSimsActions(this);
    public interface IDrivingSimsActions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnBackGear(InputAction.CallbackContext context);
        void OnNextGear(InputAction.CallbackContext context);
        void OnEngineOn(InputAction.CallbackContext context);
    }
}
